/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* node,int &wanted,int k,int &cnt){
        if(node==nullptr){
            return;
        }
        dfs(node->left,wanted,k,cnt);
        cnt++;
        if(cnt==k){wanted=node->val;}
        dfs(node->right,wanted,k,cnt);
    }

    int kthSmallest(TreeNode* root, int k) {
        int ans = -1;
        int cnt = 0;
        dfs(root,ans,k,cnt);
        return ans;
    }
};
