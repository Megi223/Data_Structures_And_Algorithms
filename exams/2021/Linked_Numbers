#include <bits/stdc++.h>
using namespace std;


struct Node {
    Node *next;
    int data;
};


class LinkedList{
    public:
    LinkedList(){
        head = nullptr;
        tail = nullptr;
    }
    ~LinkedList(){
        Node* temp;
        while(head != nullptr){
            temp = head;
            head = head->next;
            delete temp;
        }
    }
    void add(int value){
        Node* temp = new Node;
        temp->data = value;
        temp->next = nullptr;
        
        if (head == nullptr and tail == nullptr){
            head = tail = temp;
        } else {
            tail->next = temp;
            tail = temp;
        }
    }
    void print(){
        Node* curr = head;
        while(curr != nullptr){
            cout << curr->data << " ";
            curr = curr->next;
        }
    }
    Node* getHead(){
        return this->head;
    }
    
private:
    Node *head, *tail;
};
vector<int> result;
void solve(LinkedList& num1, LinkedList& num2){
    auto f = num1.getHead();
    auto s = num2.getHead();
    bool carry = 0;
    size_t sum = 0;
    while(f && s){
        sum = f->data + s->data + carry;
        if(sum >=10){
           result.push_back(sum%10);
            carry = 1;
        }
        else{
            result.push_back(sum);
            carry = 0;
        }
        f = f->next;
        s=s->next;
    }
    
    while(f){
        sum = f->data + carry;
        /*if(f->next==nullptr && sum >=10){
            result.push_back(sum);
            break;
        }*/
         result.push_back(sum%10);
            carry = sum/10;
        f = f->next;
    }
    
    while(s){
        sum = s->data + carry;
        /*if(s->next==nullptr && sum >=10){
            result.push_back(sum);
            break;
        }*/
         result.push_back(sum%10);
            carry = sum/10;
        s = s->next;
    }
    if(carry){
        result.push_back(sum/10);
    }
    reverse(result.begin(),result.end());
    for(size_t i=0;i<result.size();i++){
        cout << result[i];
    }
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    LinkedList num1, num2;

    int size1, size2;
    cin >> size1;
    for(int i = 0 ; i < size1 ; i++){
        int digit;
        cin >> digit;
        num1.add(digit);
    }
    
    cin >> size2;
    for(int i = 0 ; i < size2 ; i++){
        int digit;
        cin >> digit;
        num2.add(digit);
    }
  
    solve(num1, num2);
}
