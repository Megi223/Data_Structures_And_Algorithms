#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <queue>
using namespace std;

unordered_map<size_t,vector<size_t>> dag;

size_t findSum(size_t v){
    queue<size_t> q;
    q.push(v);
    size_t ans = 0;
    while(!q.empty()){
        size_t current = q.front();
        q.pop();
        for(auto n:dag[current]){
            ans+=n;
            q.push(n);
        }
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    size_t N, M,from,to,query;
    cin >> N >> M;
    for(size_t i=0;i<N;i++){
        cin >> from >> to;
        dag[from].push_back(to);
    }
    for(size_t i=0;i<M;i++){
        cin >> query;
        size_t sum = findSum(query);
        cout << sum << '\n';
    }
}
