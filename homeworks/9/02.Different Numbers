#include <iostream>
#include <unordered_map>
#include <queue>
using namespace std;
int main() {
    size_t N;
    cin >> N;
    long long int current;
    queue<long long int> sequence;
    unordered_map<long long int, bool> hash;
    size_t maxSize = 0;
    for (size_t i = 0; i < N; i++)
    {
        cin >> current;
        if (!hash[current]) {
            sequence.push(current);
            hash[current] = true;
        }
        else {
            while (sequence.front() != current) {
                hash[sequence.front()] = false;
                sequence.pop();
                if (sequence.empty()) {
                    break;
                }
            }
            if (!sequence.empty() && sequence.front() == current) {
                sequence.pop();
            }
            sequence.push(current);
        }
        maxSize = max(sequence.size(), maxSize);
    }
    cout << maxSize;
}
